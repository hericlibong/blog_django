name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest

    services:
      postgres: # démarre un service postgresql pour la base de données des tests
        image: postgres:16  # version de postgresql compatible avec la version de l'application
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }} # récupère les variables d'environnement de github
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports: 
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U $POSTGRES_USER"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: installer Python 3.12
        uses: actions/setup-python@v2
        with:
          python-version: 3.12

      - name: installer les dépendances
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # - name: Installer le projet en mode éditable
      #   working-directory: django_blog
      #   run: pip install -e .
        
      - name: Configurer les variables d'environnement
        run: |
          echo "DJANGO_SECRET_KEY='${{ secrets.DJANGO_SECRET_KEY }}'" >> $GITHUB_ENV
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> $GITHUB_ENV
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> $GITHUB_ENV
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> $GITHUB_ENV
          echo "POSTGRES_HOST=localhost" >> $GITHUB_ENV  # Forcer l'utilisation de localhost
          echo "POSTGRES_PORT=5432" >> $GITHUB_ENV
          echo "DATABASE_URL=postgresql://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/${{ secrets.POSTGRES_DB }}" >> $GITHUB_ENV
          echo "DJANGO_SETTINGS_MODULE=django_blog.settings" >> $GITHUB_ENV
      - name: Attendre que PostgreSQL soir prêt
        run: |
          for i in {1..10}; do
            if pg_isready -U ${{ secrets.POSTGRES_USER }} -h localhost -p 5432; then
              break
              fi
            sleep 2
          done    
      
      - name: Exécuter les migration de Django
        working-directory: django_blog
        run: |
          python manage.py migrate
      
      - name: Lancer les tests avec pytest
        working-directory: django_blog
        run: pytest --cov=portfolio --cov=accounts --cov-report=term-missing

      - name: Vérifier la conformité avec flake8
        run: flake8

      # - name: Vérifier la couverture des tests
      #   run: coverage report -m